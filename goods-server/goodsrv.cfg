#
# This is configuration file for GOODSRV server monitor
#

#######################################################
#Memory manager parameters
#######################################################

# Enable or disable background garbage collection
memmgr.gc_background = 1 # enabled

# Initial size of memory map file. Increasing this parameter will reduce
# number of memory map reallocations. 
memmgr.init_map_file_size=4096        # Kb

# Initial size of index file. Increasing this parameter will reduce
# number of index reallocations. 
memmgr.init_index_file_size=4096      # Kb

# Timeout for initiation GC process. Coordinator of GC will wait replies from
# other server for GC initiation request during specified period of time
memmgr.gc_init_timeout=60             # seconds

# Timeout for waiting acknowledgment from GC coordinator 
# to finish mark stage and perform sweep stage of GC. If no response
# will be received from GC coordinator within this period, GC will
# be aborted at the server. 
memmgr.gc_response_timeout=86400      # seconds

# Size of allocated memory since last GC, after which next garbage collection
# process will be initiated
memmgr.gc_init_allocated=10000       # Kb

# Size of used memory in database file, after reaching which next garbage collection
# process will be initiated
memmgr.gc_init_used=0            # Kb, 0 - unlimited

# Set idle period interval, after which GC will be initiated.
# If memory management server receives no request during specified period of 
# time, then GC process will be initiated
memmgr.gc_init_idle_period=0          # seconds (0 - disabled)

# Minimal size of allocated memory to start GC in idle state (see previous
# parameter). GC will be initiated only if idle period timeout is expired and
# more than gc_init_min_allocated memory was allocated since last GC.
memmgr.gc_init_min_allocated=1024     # Kb


# Maximal extension of GC grey references set. When grey references set
# is extended by more than specified number of references,
# then optimization of order of taking references from grey set
# (improving references locality) is disabled and breadth first order of 
# object reference graph traversal is used. 
memmgr.gc_grey_set_threshold=1000000  # references

# Limitations for size of storage data file
memmgr.max_data_file_size=0      # Kb (0 - unlimited)

# Limitation for number of objects in the storage
memmgr.max_objects=0                  # objects (0 - unlimited)

#######################################################
# Transaction manager parameters
#######################################################

# Enable or diable logging to the transaction log
transmgr.logging_enabled=1            # enabled

# Maintain write-ahead transaction log
transmgr.sync_log_writes=0            # enabled

# Specifies whether permanent or snapshot backup type should be used.
# If snapshot backup type is used, then backup is terminated after
# saving consistent state of database and checkpoints will 
# be enabled. Otherwise, if permanent backup type is used, then
# backup terminates and forces checkpoint after saving all
# records from transaction log. Permanent backup can be used to ensure,
# that storage can be restored after fault and loosing storage data file.
transmgr.permanent_backup=0           # disabled

# Maximal size of transaction log after which checkpoint is started. After checkpoint
# completion, writing to log file continues from the beginning. 
# transmgr.max_log_size=100000            # Kb

# Maximal size of transaction log during backup. When this limit is reached,
# all new transactions will be blocked until the end of backup.
transmgr.max_log_size_for_backup=1000000000 # Kb

# This option forces transaction manager to preallocate
# log file and doesn't truncate it after checkpoint. In this case file size 
# should not be updated after each write operations and transaction performance
# is increased about 2 times. 
transmgr.preallocated_log_size=4096      # Kb

# Timeout for committing global transaction. Coordinator will wait for replies
# of other servers participated in global transaction until expiration of this
# timeout. 
transmgr.wait_timeout=600             # seconds

# Timeout for requesting status of global transaction from coordinator. 
# When server performs recovery after crash, it need to know status of global
# transactions, in which it has been participated, So it polls coordinators
# of global transactions, using this timeout as interval for resending request
# to coordinator. 
transmgr.retry_timeout=5              # seconds

# Specifies time interval between two checkpoint. Checkpoint can be forced 
# either by exceeding some limit value of transaction log size 
# or after some specified period of time (if this timeout is non-zero). 
transmgr.checkpoint_period=0          # seconds (0 - no checkpoint process)

# Enable or disable dynamic reclustering of objects. If dynamic
# reclustering of objects is enabled, all objects modified in
# transaction are sequentially written to new place in the storage
# (with the assumption that objects modified in one transaction will 
# be also accessed together in future). This parameter specifies maximal size 
# of object for dynamic reclustering. Zero value of this parameter disables 
# reclustering.  
transmgr.dynamic_reclustering_limit=0 # bytes (0 - disabled)


# Address of replication node. 
# This address is used both at primary and standby node sides. 
# When server is started and replication_node is not NULL, server will try to connect
# to specified node. If connection is established, it becomes standby node.
# Otherwise server is started as primary server and accept connections from other standby servers
#transmgr.replication_node="localhost:6100"

#######################################################
# Object manager parameters
#######################################################

# Deadlock detection timeout. If lock can't be granted within specified 
# period of time, server consider that deadlock takes place and abort one or 
# more client process to destroy deadlock. 
objmgr.lock_timeout=600               # seconds

#######################################################
# Pool manager parameters
#######################################################

# Size of page cache. Increasing this value will improve performance of disk 
# IO operations.
poolmgr.page_pool_size=100000           # pages

#######################################################
# Server parameters
#######################################################

# Maximal size of object cluster to be sent to client. Server can perform
# optimization of sending objects to clients. Instead of sending one object
# for each request, it can send several objects (cluster of objects), including
# in cluster objects referenced from requested object (but only if total
# size of objects will not exceed cluster_size parameter).
server.cluster_size=512               # bytes

# server.admin_telnet_port="localhost:80"

# Enable or disable acceptance of remote connections by GOODS server. 
# Disabling remote connections avoid any problem with firewall. In this case
# GOODS server is able to handle only local connections (Unix socket, Win32 local socket, process socket)
server.remote.connections=1 # 1 or 0


